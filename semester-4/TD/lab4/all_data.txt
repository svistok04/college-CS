0
0.0125
0.025
0.0375
0.05
0.0625
0.075
0.0875
0.1
0.1125

za [0.0, -4.898587196589413e-16, -9.797174393178826e-16, 1.1271702397248355e-14, -1.959434878635765e-15, -2.4492935982947065e-15, 1.1271702397248355e-14, 2.156368735517883e-14, -7.83773951454306e-15, -4.408728476930472e-15]
zp [1.2246467991473532e-16, -4.898587196589413e-16, -9.797174393178826e-16, -1.9606728399089416e-15, -1.959434878635765e-15, -2.4492935982947065e-15, 1.1271702397248355e-14, -1.421209267647518e-14, 4.886207583857646e-16, -4.408728476930472e-15]
zf [0.0, -7.347880794884119e-16, -1.4695761589768238e-15, 1.1271702397248355e-14, -2.9391523179536475e-15, -1.0779367755043061e-14, 9.802126238271532e-15, 2.156368735517883e-14, -7.83773951454306e-15, -1.371852007299671e-14]









fn draw_graph2(x_data: &[f64], y_data: &[f64], colors: &[char], file_name: &str) -> Result<(), Box<dyn Error>> {
    let root_area = BitMapBackend::new(file_name, (2500, 1000)).into_drawing_area();
    root_area.fill(&WHITE)?;

    let x_min = *x_data.iter().min_by(|a, b| a.partial_cmp(b).unwrap()).unwrap();
    let x_max = *x_data.iter().max_by(|a, b| a.partial_cmp(b).unwrap()).unwrap();
    let y_min = *y_data.iter().min_by(|a, b| a.partial_cmp(b).unwrap()).unwrap();
    let y_max = *y_data.iter().max_by(|a, b| a.partial_cmp(b).unwrap()).unwrap();

    let mut chart = ChartBuilder::on(&root_area)
        .margin(10)
        .x_label_area_size(50)
        .y_label_area_size(70)
        .build_cartesian_2d(x_min..x_max, y_min..y_max)?;

    chart.configure_mesh()
        .x_desc("Time")
        .y_desc("Values")
        .axis_desc_style(("sans-serif", 15).into_font())

        .draw()?;

    chart.draw_series(LineSeries::new(
        x_data.iter().cloned().zip(y_data.iter().cloned()),
        *&ShapeStyle::from(&BLUE.mix(0.5)).stroke_width(2)
    )).unwrap();


    chart.draw_series(
        x_data.iter().zip(y_data.iter()).zip(colors.iter())
            .filter(|&(_, &color)| color == '1')
            .map(|((x, y), _)| Circle::new((*x, *y), 5, ShapeStyle::from(&RED).filled()))
    )?
        .label("1")
        .legend(|(x, y)| Circle::new((x + 10, y), 5, ShapeStyle::from(&RED).filled()));

    chart.draw_series(
        x_data.iter().zip(y_data.iter()).zip(colors.iter())
            .filter(|&(_, &color)| color == '0')
            .map(|((x, y), _)| Circle::new((*x, *y), 5, ShapeStyle::from(&GREEN).filled()))
    )?
        .label("0")
        .legend(|(x, y)| Circle::new((x + 10, y), 5, ShapeStyle::from(&GREEN).filled()));

    chart.configure_series_labels()
        .background_style(&WHITE.mix(0.8))
        .border_style(&BLACK)
        .draw()?;

    root_area.present()?;
    Ok(())
}
